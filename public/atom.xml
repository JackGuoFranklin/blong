<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>JackGuoFranklin</title>
  <subtitle>开心</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-04-27T09:43:55.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>JackGuoFranklin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mac恢复允许“任何来源”的选项</title>
    <link href="http://yoursite.com/2017/04/27/mac/mac%E4%BB%BB%E4%BD%95%E6%9D%A5%E6%BA%90/"/>
    <id>http://yoursite.com/2017/04/27/mac/mac任何来源/</id>
    <published>2017-04-27T09:41:04.000Z</published>
    <updated>2017-04-27T09:43:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>恢复允许“任何来源”的选项</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">我们可以在终端中使用 spctl 命令来实现：</div><div class="line"></div><div class="line">　　sudo spctl --master-disable</div></pre></td></tr></table></figure>
<p>输入上述命令之后，我们可以发现，久违的“任何来源”回来了：</p>
<p>如果在系统偏好设置的“安全与隐私”中重新选中允许 App Store 和被认可的开发者 App，即重新打开 Gatekeeper 后，允许“任何来源”App 的选项会再次消失，可运行上述命令再次关闭 Gatekeeper。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;恢复允许“任何来源”的选项&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;d
    
    </summary>
    
      <category term="mac" scheme="http://yoursite.com/categories/mac/"/>
    
    
      <category term="mac" scheme="http://yoursite.com/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>node.js 版本升级</title>
    <link href="http://yoursite.com/2017/04/26/nodejs/node.js%20%E7%89%88%E6%9C%AC%E5%8D%87%E7%BA%A7/"/>
    <id>http://yoursite.com/2017/04/26/nodejs/node.js 版本升级/</id>
    <published>2017-04-25T23:16:40.000Z</published>
    <updated>2017-04-25T23:16:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>一行命令搞定node.js 版本升级</p>
<p>首先安装n模块：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm install -g n</div></pre></td></tr></table></figure>
<p>第二步：<br>升级node.js到最新稳定版</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">n stable</div></pre></td></tr></table></figure>
<p>n后面也可以跟随版本号比如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">n v0.10.26</div><div class="line">或</div><div class="line">n 0.10.26</div></pre></td></tr></table></figure>
<p>另外分享几个npm的常用命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">npm -v          #显示版本，检查npm 是否正确安装。</div><div class="line"></div><div class="line">npm install express   #安装express模块</div><div class="line"></div><div class="line">npm install -g express  #全局安装express模块</div><div class="line"></div><div class="line">npm list         #列出已安装模块</div><div class="line"></div><div class="line">npm show express     #显示模块详情</div><div class="line"></div><div class="line">npm update        #升级当前目录下的项目的所有模块</div><div class="line"></div><div class="line">npm update express    #升级当前目录下的项目的指定模块</div><div class="line"></div><div class="line">npm update -g express  #升级全局安装的express模块</div><div class="line"></div><div class="line">npm uninstall express  #删除指定的模块</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一行命令搞定node.js 版本升级&lt;/p&gt;
&lt;p&gt;首先安装n模块：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="node.js" scheme="http://yoursite.com/categories/node-js/"/>
    
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>swift - 状态栏</title>
    <link href="http://yoursite.com/2017/04/26/swift/swift%E7%8A%B6%E6%80%81%E6%A0%8F/"/>
    <id>http://yoursite.com/2017/04/26/swift/swift状态栏/</id>
    <published>2017-04-25T23:16:40.000Z</published>
    <updated>2017-04-25T23:16:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>状态栏</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> 	//状态栏高度</div><div class="line"> 	let statusHeight = UIApplication.shared.statusBarFrame.height</div><div class="line">//导航栏高度</div><div class="line">  	let navigationHeight = self.navigationController?.navigationBar.frame.size.height</div></pre></td></tr></table></figure>
<p>Swift - 隐藏状态栏（statusBar）的两种方法</p>
<p>1，全局设置</p>
<p>这种方法修改后，整个应用的所有视图都不显示状态栏。</p>
<p>（1）在 Info.plist 中添加如下配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;key&gt;UIViewControllerBasedStatusBarAppearance&lt;/key&gt;</div><div class="line">&lt;false/&gt;</div></pre></td></tr></table></figure>
<p>（2）在 General -&gt; Deployment Info 中，将 Hide status bar 勾选。</p>
<p>2，在视图控制器中单独设置</p>
<p>这用方法适合于只隐藏部分页面的状态栏。我们在需要隐藏 statusbar 的 ViewController 中添加如下代码即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">import UIKit</div><div class="line"> </div><div class="line">class ViewController: UIViewController &#123;</div><div class="line">     </div><div class="line">    //隐藏状态栏</div><div class="line">    override var prefersStatusBarHidden: Bool &#123;</div><div class="line">        return true</div><div class="line">    &#125;</div><div class="line">  </div><div class="line">    override func didReceiveMemoryWarning() &#123;</div><div class="line">        super.didReceiveMemoryWarning()</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;状态栏&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=
    
    </summary>
    
      <category term="swift" scheme="http://yoursite.com/categories/swift/"/>
    
    
      <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>swift代理delegate</title>
    <link href="http://yoursite.com/2017/04/26/swift/swift%E4%BB%A3%E7%90%86/"/>
    <id>http://yoursite.com/2017/04/26/swift/swift代理/</id>
    <published>2017-04-25T23:16:40.000Z</published>
    <updated>2017-04-25T23:16:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>实现代理传值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">import UIKit</div><div class="line"></div><div class="line">class ViewController: UIViewController,ChangeValueDelegate&#123;</div><div class="line">    </div><div class="line">    var btn = UIButton()</div><div class="line"></div><div class="line">    override func viewDidLoad() &#123;</div><div class="line">        super.viewDidLoad()</div><div class="line"></div><div class="line">        self.view.backgroundColor = UIColor.whiteColor()</div><div class="line">        </div><div class="line">        btn.setTitle(&quot;Change&quot;, forState:.Normal)</div><div class="line">        btn.backgroundColor = UIColor.blueColor()</div><div class="line">        btn.frame = CGRect(x: 100, y: 100, width: 100, height: 50)</div><div class="line">        btn.addTarget(self, action: #selector(change), forControlEvents: .TouchUpInside)</div><div class="line">        self.view.addSubview(btn)</div><div class="line">        </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    override func didReceiveMemoryWarning() &#123;</div><div class="line">        super.didReceiveMemoryWarning()</div><div class="line">        // Dispose of any resources that can be recreated.</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    //    delegate 代理方法</div><div class="line">    func changeValue(value: String) &#123;</div><div class="line">        </div><div class="line">        btn.setTitle(value, forState: .Normal)</div><div class="line">        print(&quot;value:\(value)&quot;)</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    //  传值</div><div class="line">    func change()&#123;</div><div class="line">        </div><div class="line">        let vc = ChangeValueViewController()</div><div class="line">        vc.delegate = self</div><div class="line">        self.navigationController?.pushViewController(vc, animated: true)</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>协议</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">protocol ChangeValueDelegate &#123;</div><div class="line">    </div><div class="line">    func changeValue(value:String)</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>使用代理传值</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">class ChangeValueViewController: UIViewController &#123;</div><div class="line">    </div><div class="line">    var delegate:ChangeValueDelegate?</div><div class="line">    </div><div class="line">    override func viewDidLoad() &#123;</div><div class="line">        super.viewDidLoad()</div><div class="line"></div><div class="line">        // Do any additional setup after loading the view.</div><div class="line">        self.view.backgroundColor = UIColor.whiteColor()</div><div class="line">        </div><div class="line">        self.delegate?.changeValue(&quot;ok&quot;)</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    override func didReceiveMemoryWarning() &#123;</div><div class="line">        super.didReceiveMemoryWarning()</div><div class="line">        // Dispose of any resources that can be recreated.</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;实现代理传值&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class
    
    </summary>
    
      <category term="swift" scheme="http://yoursite.com/categories/swift/"/>
    
    
      <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
      <category term="delegate" scheme="http://yoursite.com/tags/delegate/"/>
    
  </entry>
  
  <entry>
    <title>swift-UISreen类的屏幕大小</title>
    <link href="http://yoursite.com/2017/04/26/swift/UISreen%E7%B1%BB%E7%9A%84%E5%B1%8F%E5%B9%95%E5%A4%A7%E5%B0%8F/"/>
    <id>http://yoursite.com/2017/04/26/swift/UISreen类的屏幕大小/</id>
    <published>2017-04-25T23:16:40.000Z</published>
    <updated>2017-04-25T23:16:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>获取 UISreen类的屏幕大小</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//获取屏幕大小</div><div class="line">var screenBounds:CGRect = UIScreen.mainScreen().bounds</div><div class="line">println(screenBounds) //iPhone6输出：（0.0,0.0,375.0,667.0）</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;获取 UISreen类的屏幕大小&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div
    
    </summary>
    
      <category term="swift" scheme="http://yoursite.com/categories/swift/"/>
    
    
      <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>swift_ios_开发之UINavigationController的常用属性</title>
    <link href="http://yoursite.com/2017/04/26/swift/swift_ios_%E5%BC%80%E5%8F%91%E4%B9%8BUINavigationController%E7%9A%84%E5%B8%B8%E7%94%A8%E5%B1%9E%E6%80%A7/"/>
    <id>http://yoursite.com/2017/04/26/swift/swift_ios_开发之UINavigationController的常用属性/</id>
    <published>2017-04-25T23:16:40.000Z</published>
    <updated>2017-04-27T04:01:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>Swift开发之UINavigationController的常用属性</p>
<p>1.导航栏是否隐藏</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">self.navigationController?.navigationBar.hidden = false</div></pre></td></tr></table></figure>
<p>2.导航栏的最底部颜色设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//backgroundColor 是最底下的color </div><div class="line">self.navigationController?.navigationBar.backgroundColor = UIColor.redColor()</div></pre></td></tr></table></figure>
<p>3.导航栏的表层颜色，即首先看到的颜色</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//barTintColor 是表层颜色</div><div class="line">self.navigationController?.navigationBar.barTintColor = UIColor.grayColor()</div></pre></td></tr></table></figure>
<p>4.导航栏中间标题title的颜色，大小，字体设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">self.navigationController?.navigationBar.titleTextAttributes = [NSForegroundColorAttributeName:UIColor.blueColor(),NSFontAttributeName:UIFont(name: &quot;Heiti SC&quot;, size: 24.0)!]</div></pre></td></tr></table></figure>
<p>5.导航栏隐藏左边backitem，即leftbarbuttonitem</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//完全隐藏backItem//</div><div class="line">self.navigationItem.setHidesBackButton(true, animated: true)</div></pre></td></tr></table></figure>
<p>6.导航栏leftbarbuttonitem的颜色设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">swiftself.navigationController?.navigationBar.tintColor = UIColor.whiteColor()</div></pre></td></tr></table></figure>
<p>7.导航栏leftbarbuttonitem的字体，颜色，大小设置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">self.navigationItem.leftBarButtonItem?.setTitleTextAttributes([NSForegroundColorAttributeName:UIColor.blueColor(),NSFontAttributeName: UIFont(name: &quot;Chalkduster&quot;, size: 13)!], forState: UIControlState.Normal)</div></pre></td></tr></table></figure>
<p>8.导航栏重新定义leftbarbuttonitem</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//重新定义backItem，将覆盖原来的BackItem.与storyboard中拖入一个item，效果一样。都是覆盖原来的backitem。</div><div class="line"></div><div class="line">//第一种代码定义方式</div><div class="line">self.navigationItem.setLeftBarButtonItem(UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.Add, target: self, action: &quot;function&quot;), animated: true)</div><div class="line"></div><div class="line">//第二种代码定义方式 </div><div class="line">self.navigationItem.leftBarButtonItem = UIBarButtonItem(barButtonSystemItem: UIBarButtonSystemItem.Add, target: self, action: &quot;function&quot;)</div><div class="line"></div><div class="line">//第三种代码定义的方式</div><div class="line">self.navigationItem.setLeftBarButtonItem(UIBarButtonItem(title: &quot;&lt;Grandre&quot;, style: UIBarButtonItemStyle.Plain, target: self, action: &quot;function&quot;), animated: true)</div></pre></td></tr></table></figure>
<p>9.导航栏设置成透明</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//将导航栏设置成透明</div><div class="line">self.navigationController?.navigationBar.setBackgroundImage(UIImage(), forBarMetrics: UIBarMetrics.Default)</div><div class="line">self.navigationController!.navigationBar.shadowImage = UIImage()</div><div class="line">self.navigationController?.navigationBar.translucent = true</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Swift开发之UINavigationController的常用属性&lt;/p&gt;
&lt;p&gt;1.导航栏是否隐藏&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;l
    
    </summary>
    
      <category term="swift" scheme="http://yoursite.com/categories/swift/"/>
    
    
      <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
      <category term="ios" scheme="http://yoursite.com/tags/ios/"/>
    
      <category term="UINavigationController" scheme="http://yoursite.com/tags/UINavigationController/"/>
    
  </entry>
  
  <entry>
    <title>ios存储方式做之一UserDefaults</title>
    <link href="http://yoursite.com/2017/03/15/swift/ios%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F%E4%B9%8BUserDefaults/"/>
    <id>http://yoursite.com/2017/03/15/swift/ios存储方式之UserDefaults/</id>
    <published>2017-03-15T14:50:33.000Z</published>
    <updated>2017-03-15T14:50:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>ios存储方式做之一UserDefaults</p>
<p>1、UserDefaults支持的数据格式有：Number、Data、Date、String、Array、Dictionary、BOOL</p>
<p>2、以键值对的形式进行存储</p>
<p>3、存储时间为整体应用程序的存储时间，如果想需要删除，需要删除整体应用程序</p>
<p>使用方法<br>1，初始化一个userDefaults</p>
<p>let userDefaults = UserDefaults.standard</p>
<p>UserDefaults.standard.set(true, forKey: “isFrist”)</p>
<p>2，把数据存到磁盘上<br> userDefaults.synchronize()</p>
<p>3，删除<br>userDefaults.removeObject(forKey: &lt;#T##String#&gt;)</p>
<p>4，打印app资源目录路径<br> let path = Bundle.main.bundlePath</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ios存储方式做之一UserDefaults&lt;/p&gt;
&lt;p&gt;1、UserDefaults支持的数据格式有：Number、Data、Date、String、Array、Dictionary、BOOL&lt;/p&gt;
&lt;p&gt;2、以键值对的形式进行存储&lt;/p&gt;
&lt;p&gt;3、存储时间为整体应
    
    </summary>
    
      <category term="swift" scheme="http://yoursite.com/categories/swift/"/>
    
    
      <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
      <category term="UserDefaultstags" scheme="http://yoursite.com/tags/UserDefaultstags/"/>
    
  </entry>
  
  <entry>
    <title>标签栏按钮UITabBarItem样式修改</title>
    <link href="http://yoursite.com/2017/03/15/swift/%E6%A0%87%E7%AD%BE%E6%A0%8F%E6%8C%89%E9%92%AEUITabBarItem%E6%A0%B7%E5%BC%8F%E4%BF%AE%E6%94%B9/"/>
    <id>http://yoursite.com/2017/03/15/swift/标签栏按钮UITabBarItem样式修改/</id>
    <published>2017-03-15T14:50:33.000Z</published>
    <updated>2017-03-15T14:50:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>Swift - 标签栏按钮UITabBarItem样式修改</p>
<p>1，tabBarItem图片的推荐尺寸和最大支持尺寸<br>下面是标签栏（UITabBar）中tab按钮图标分别在1x、2x、3x下不会压缩变形的尺寸：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">@1x : 推荐 25 x 25   (最大: 48 x 32)</div><div class="line">@2x : 推荐 50 x 50   (最大: 96 x 64)</div><div class="line">@3x : 推荐 75 x 75   (最大: 144 x 96)</div></pre></td></tr></table></figure>
<p>2，修改图片和文字的颜色<br>（1）图片和文字同时改变</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//图片文字一起变色</div><div class="line">self.tabBar.tintColor = UIColor.orange()</div></pre></td></tr></table></figure>
<p>（2）只改变文字颜色</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//改变文字颜色</div><div class="line">UITabBarItem.appearance().setTitleTextAttributes(</div><div class="line">    [NSForegroundColorAttributeName: UIColor.gray], forState:.normal)</div><div class="line">UITabBarItem.appearance().setTitleTextAttributes(</div><div class="line">    [NSForegroundColorAttributeName: UIColor.orange], forState:.selected)</div></pre></td></tr></table></figure>
<p>（3）只改变图片颜色</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">self.tabBar.tintColor = UIColor.orange()</div><div class="line">//文字颜色还原</div><div class="line">UITabBarItem.appearance().setTitleTextAttributes(</div><div class="line">    [NSForegroundColorAttributeName: self.view.tintColor], forState:.selected)</div></pre></td></tr></table></figure>
<p>3，选中时、不选中时使用不同图片<br>默认标签选中、不选中都使用的是同一个图片，只是颜色不同。我们也可使用两张不同图片表示两种状态。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">qq.tabBarItem = UITabBarItem(title: &quot;QQ&quot;, image: UIImage(named: &quot;qq&quot;),</div><div class="line">    selectedImage: UIImage(named: &quot;qq_active&quot;))</div><div class="line"> </div><div class="line">android.tabBarItem = UITabBarItem(title: &quot;Android&quot;, image: UIImage(named: &quot;android&quot;),</div><div class="line">    selectedImage: UIImage(named: &quot;android_active&quot;))</div></pre></td></tr></table></figure>
<p>4，使用图片的原始颜色<br>默认不管原图是什么颜色，渲染器都会将渲染成单一颜色，虽说符合现在扁平化的趋势，但有时我们还是想要使用图片原来的样子。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">qq.tabBarItem =  UITabBarItem(title: &quot;QQ&quot;, image: UIImage(named: &quot;qq_color&quot;),</div><div class="line">    selectedImage: UIImage(named: &quot;qq_color&quot;)?.imageWithRenderingMode(.AlwaysOriginal))</div><div class="line"> </div><div class="line">android.tabBarItem =  UITabBarItem(title: &quot;Android&quot;, image: UIImage(named: &quot;android_color&quot;),</div><div class="line">    selectedImage: UIImage(named: &quot;android_color&quot;)?.imageWithRenderingMode(.AlwaysOriginal))</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Swift - 标签栏按钮UITabBarItem样式修改&lt;/p&gt;
&lt;p&gt;1，tabBarItem图片的推荐尺寸和最大支持尺寸&lt;br&gt;下面是标签栏（UITabBar）中tab按钮图标分别在1x、2x、3x下不会压缩变形的尺寸：&lt;/p&gt;
&lt;figure class=&quot;high
    
    </summary>
    
      <category term="swift" scheme="http://yoursite.com/categories/swift/"/>
    
    
      <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
      <category term="UITabBarItem" scheme="http://yoursite.com/tags/UITabBarItem/"/>
    
  </entry>
  
  <entry>
    <title>github插件3</title>
    <link href="http://yoursite.com/2017/03/15/github/github%E6%8F%92%E4%BB%B63/"/>
    <id>http://yoursite.com/2017/03/15/github/github插件3/</id>
    <published>2017-03-15T14:50:33.000Z</published>
    <updated>2017-03-15T14:50:33.000Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li>GitHub Cue<br><img src="/image/imagegithub6.jpg" alt="image1"><br>GitHub-Cue 会根据用户正在查看的库给出一些建议或者推荐一些你可能感兴趣的库。</li>
</ol>
<p>2.Github Highlight Selected<br><img src="/image/imagegithub7.jpg" alt="image1"><br>当你在 Github 源代码中选中一个词的时候，这个插件会为你高亮显示这个文件中其他相同的词。</p>
<p>3.GH Diff Highlight<br><img src="/image/imagegithub8.jpg" alt="image1"><br>允许你像使用一个很好的 IDE 那样浏览源代码。它为 Github 上的代码添加了即时文档和类型提示，并为每一个标识符添加了跳转到定义处的链接。除此之外，它还会高亮显示源代码之间的差异。</p>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;GitHub Cue&lt;br&gt;&lt;img src=&quot;/image/imagegithub6.jpg&quot; alt=&quot;image1&quot;&gt;&lt;br&gt;GitHub-Cue 会根据用户正在查看的库给出一些建议或者推荐一些你可能感兴趣的库。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;2.Githu
    
    </summary>
    
      <category term="github" scheme="http://yoursite.com/categories/github/"/>
    
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
      <category term="chrome" scheme="http://yoursite.com/tags/chrome/"/>
    
  </entry>
  
  <entry>
    <title>python django新建项目</title>
    <link href="http://yoursite.com/2016/11/06/python/%E5%BD%93%E6%8F%90%E7%A4%BA%E7%AB%AF%E5%8F%A3%E8%A2%AB%E5%8D%A0%E7%94%A8/"/>
    <id>http://yoursite.com/2016/11/06/python/当提示端口被占用/</id>
    <published>2016-11-05T23:16:27.000Z</published>
    <updated>2016-11-05T23:16:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>1 新建一个 django project</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">django-admin.py startproject project-name</div></pre></td></tr></table></figure>
<p>一个 project 为一个项目，project-name 项目名称，改成你自己的，要符合Python 的变量命名规则（以下划线或字母开头）</p>
<p>2 新建 app</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">python manage.py startapp app-name</div><div class="line">或 django-admin.py startapp app-name</div></pre></td></tr></table></figure>
<p>一般一个项目有多个app, 当然通用的app也可以在多个项目中使用。</p>
<p>3 同步数据库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">python manage.py syncdb</div><div class="line"> </div><div class="line">注意：Django 1.7.1及以上的版本需要用以下命令</div><div class="line">python manage.py makemigrations</div><div class="line">python manage.py migrate</div></pre></td></tr></table></figure>
<p>这种方法可以创建表，当你在models.py中新增了类时，运行它就可以自动在数据库中创建表了，不用手动创建。</p>
<p>备注：对已有的 models 进行修改，Django 1.7之前的版本的Django都是无法自动更改表结构的，不过有第三方工具 south,详见 Django 数据库迁移 一节。</p>
<p>4 使用开发服务器<br>开发服务器，即开发时使用，一般修改代码后会自动重启，方便调试和开发，但是由于性能问题，建议只用来测试，不要用在生产环境。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">python manage.py runserver</div><div class="line"> </div><div class="line"># 当提示端口被占用的时候，可以用其它端口：</div><div class="line">python manage.py runserver 8001</div><div class="line">python manage.py runserver 9999</div><div class="line">（当然也可以kill掉占用端口的进程）</div><div class="line"> </div><div class="line"># 监听所有可用 ip （电脑可能有一个或多个内网ip，一个或多个外网ip，即有多个ip地址）</div><div class="line">python manage.py runserver 0.0.0.0:8000</div><div class="line"># 如果是外网或者局域网电脑上可以用其它电脑查看开发服务器</div><div class="line"># 访问对应的 ip加端口，比如 http://172.16.20.2:8000</div></pre></td></tr></table></figure>
<p> 5 清空数据库</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python manage.py flush</div></pre></td></tr></table></figure>
<p>此命令会询问是 yes 还是 no, 选择 yes 会把数据全部清空掉，只留下空表。</p>
<p>6  创建超级管理员</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">python manage.py createsuperuser</div><div class="line"> </div><div class="line"># 按照提示输入用户名和对应的密码就好了邮箱可以留空，用户名和密码必填</div><div class="line"> </div><div class="line"># 修改 用户密码可以用：</div><div class="line">python manage.py changepassword username</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1 新建一个 django project&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td clas
    
    </summary>
    
      <category term="python django" scheme="http://yoursite.com/categories/python-django/"/>
    
    
      <category term="python django" scheme="http://yoursite.com/tags/python-django/"/>
    
  </entry>
  
  <entry>
    <title>iterm2配色</title>
    <link href="http://yoursite.com/2016/11/05/mac/iterm2%E9%85%8D%E8%89%B2/"/>
    <id>http://yoursite.com/2016/11/05/mac/iterm2配色/</id>
    <published>2016-11-05T12:31:47.000Z</published>
    <updated>2016-11-05T12:33:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>iterm2配色方案</p>
<p>#配色来源</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">iterm2官网所提供的配色方案iTerm2-Color-Schemes</div><div class="line">在schemes目录下提供了很多种配色方案</div><div class="line">altercation大神的solarized配色方案solarized</div><div class="line">在这个repo中给出了多个编辑器的配色方案，显然我们需要的是目录</div><div class="line">iterm2-colors-solarized下的</div><div class="line"></div><div class="line">Solarized Dark.itermcolors 和 </div><div class="line">Solarized Light.itermcolors</div></pre></td></tr></table></figure>
<p>#步骤</p>
<ol>
<li>下载配色方案</li>
<li><p>首先打开home目录下的 .bash_profile 文件</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">    vim ~/.bash_profile</div><div class="line">   ```   </div><div class="line">粘进去</div></pre></td></tr></table></figure>
<p> export CLICOLOR=1<br> LSCOLORS=gxfxcxdxbxegedabagacad<br> export PS1=’[\033[01;32m]\u@\h[\033[00m]:[\033[01;36m]\w[\033[00m]\$ ‘</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">保存退出</div></pre></td></tr></table></figure>
<p> source ~/.bash_profile<br> ```<br> 文件生效</p>
</li>
<li><p>进入iterm2<br>Preferences-&gt;Profiles-&gt;Terminal 标签下的 Terminal Emulation 选择的是 xterm-new<br>之后在 Preferences-&gt;Profiles-&gt;Colors 标签，点击 Load Preset 列表中的 Import 进行导入配色方案，之后进入text标签，不勾选Draw bold text in bright colors选项。<br>重启iterm2</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;iterm2配色方案&lt;/p&gt;
&lt;p&gt;#配色来源&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;
    
    </summary>
    
      <category term="iterm" scheme="http://yoursite.com/categories/iterm/"/>
    
    
      <category term="iterm" scheme="http://yoursite.com/tags/iterm/"/>
    
  </entry>
  
  <entry>
    <title>隐藏dsstore</title>
    <link href="http://yoursite.com/2016/11/02/mac/%E9%9A%90%E8%97%8Fdsstore/"/>
    <id>http://yoursite.com/2016/11/02/mac/隐藏dsstore/</id>
    <published>2016-11-02T11:06:01.000Z</published>
    <updated>2016-11-02T11:06:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>隐藏dsstore</p>
<p>隐藏文件的方法解决了 mac系统如何显示和隐藏文件 苹果Mac OS X操作系统下，隐藏文件是否显示有很多种设置方法，最简单的要算在Mac终端输入命令。显示/隐藏Mac隐藏文件命令如下(注意其中的空格并且区分大小写)： 显示Mac隐藏文件的命令：defaults write com.apple.finder AppleShowAllFiles -bool true 隐藏Mac隐藏文件的命令：defaults write com.apple.finder AppleShowAllFiles -bool false 或者 显示Mac隐藏文件的命令：defaults write com.apple.finder AppleShowAllFiles YES 隐藏Mac隐藏文件的命令：defaults write com.apple.finder AppleShowAllFiles NO 输完单击Enter键，退出终端，重新启动Finder就可以了 重启Finder：鼠标单击窗口左上角的苹果标志–&gt;强制退出–&gt;Finder–&gt;重新启动 别处转来的</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;隐藏dsstore&lt;/p&gt;
&lt;p&gt;隐藏文件的方法解决了 mac系统如何显示和隐藏文件 苹果Mac OS X操作系统下，隐藏文件是否显示有很多种设置方法，最简单的要算在Mac终端输入命令。显示/隐藏Mac隐藏文件命令如下(注意其中的空格并且区分大小写)： 显示Mac隐藏文件的
    
    </summary>
    
      <category term="mac" scheme="http://yoursite.com/categories/mac/"/>
    
    
      <category term="mac" scheme="http://yoursite.com/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>Swift 图片下载</title>
    <link href="http://yoursite.com/2016/08/20/swift/Kingfisher/"/>
    <id>http://yoursite.com/2016/08/20/swift/Kingfisher/</id>
    <published>2016-08-20T15:40:28.000Z</published>
    <updated>2016-08-20T15:40:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>Kingfisher</p>
<p>oc有个非常强大图片缓存处理的库SDWebImage，swift中现在也有个不错的图片处理的库—-Kingfisher</p>
<p>Kingfisher库下载图片默认是带缓存的</p>
<p>最简单的使用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">import Kingfisher</div><div class="line">imageView.kf_setImageWithURL(NSURL(string: &quot;http//www.baidu.com.png&quot;)!)</div></pre></td></tr></table></figure>
<p>配置 https</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">在info.plist里加上下面这段</div><div class="line">&lt;dict&gt;</div><div class="line">    &lt;key&gt;NSAllowsArbitraryLoads&lt;/key&gt;</div><div class="line">    &lt;true/&gt;</div><div class="line">&lt;/dict&gt;</div><div class="line">&lt;/plist&gt;</div><div class="line">去配置一个Dictionary类型的NSAppTransportSecurity 子item是Boolean类型NSAllowsArbitraryLoads value是YES</div></pre></td></tr></table></figure>
<p>添加默认图</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">testImag.kf_setImageWithURL(NSURL(string: &quot;http://your.png&quot;)!, placeholderImage: UIImage(named: &quot;mrt&quot;))</div></pre></td></tr></table></figure>
<p>默认情况下Kingfisher使用url当做cache(缓存)的key。 不过你也可以自定义这个key 。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">let URL = NSURL(string: &quot;http://your.png&quot;)!</div><div class="line">let resource = Resource(downloadURL: URL, cacheKey: &quot;your_customized_key&quot;)</div><div class="line">imageView.kf_setImageWithResource(resource)</div></pre></td></tr></table></figure>
<p>Kingfisher 默认先从内存和硬盘搜 ，如果没找到才去URL down，当然你也可以强制它每次从URL down，忽略缓存</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">imageView.kf_setImageWithURL(NSURL(string: &quot;your_image_url&quot;)!, placeholderImage: nil, optionsInfo: [.Options: KingfisherOptions.ForceRefresh])</div></pre></td></tr></table></figure>
<p>下载和缓存系统</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">let downloader = KingfisherManager.sharedManager.downloader</div><div class="line"></div><div class="line">// 修改超时时间</div><div class="line">downloader.downloadTimeout = 5</div><div class="line"></div><div class="line">let cache = KingfisherManager.sharedManager.cache</div><div class="line"></div><div class="line">// 设置硬盘最大缓存50M ，默认无限</div><div class="line">cache.maxDiskCacheSize = 50 * 1024 * 1024</div><div class="line">// 设置硬盘最大保存3天 ， 默认1周</div><div class="line">cache.maxCachePeriodInSecond = 60 * 60 * 24 * 3</div><div class="line"></div><div class="line">// 获取硬盘缓存的大小</div><div class="line">cache.cache.calculateDiskCacheSizeWithCompletionHandler &#123; (size) -&gt; () in      </div><div class="line">    println(&quot;disk size in bytes: \(size)&quot;)</div><div class="line">&#125;</div><div class="line"></div><div class="line">//清理内存缓存</div><div class="line">cache.clearMemoryCache()</div><div class="line"></div><div class="line">// 清理硬盘缓存，这是一个异步的操作</div><div class="line">cache.clearDiskCache()</div><div class="line"></div><div class="line">// 清理过期或大小超过磁盘限制缓存。这是一个异步的操作</div><div class="line">cache.cleanExpiredDiskCache()</div></pre></td></tr></table></figure>
<p>回调</p>
<p>下载完成后</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">imageView.kf_setImageWithURL(NSURL(string: &quot;your_image_url&quot;)!, </div><div class="line">  placeholderImage: nil, </div><div class="line">  optionsInfo: nil, </div><div class="line">  progressBlock: &#123; (receivedSize, totalSize) -&gt; () in </div><div class="line">  println(&quot;Download Progress: \(receivedSize)/\(totalSize)&quot;) &#125;, </div><div class="line">  completionHandler: &#123; (image, error, imageURL) -&gt; () in </div><div class="line">  println(&quot;Downloaded and set!&quot;) </div><div class="line">&#125;)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Kingfisher&lt;/p&gt;
&lt;p&gt;oc有个非常强大图片缓存处理的库SDWebImage，swift中现在也有个不错的图片处理的库—-Kingfisher&lt;/p&gt;
&lt;p&gt;Kingfisher库下载图片默认是带缓存的&lt;/p&gt;
&lt;p&gt;最简单的使用&lt;/p&gt;
&lt;figure cla
    
    </summary>
    
      <category term="swift" scheme="http://yoursite.com/categories/swift/"/>
    
    
      <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>mysql 更改密码</title>
    <link href="http://yoursite.com/2016/08/14/mysql/mysql%E6%9B%B4%E6%94%B9%E5%AF%86%E7%A0%81/"/>
    <id>http://yoursite.com/2016/08/14/mysql/mysql更改密码/</id>
    <published>2016-08-14T14:04:46.000Z</published>
    <updated>2016-08-14T14:04:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>mysql 更改密码<br>此时我们在命令行输入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mysql -u root -p</div></pre></td></tr></table></figure>
<p>命令会提示没有commod not found，我们还需要将mysql加入系统环境变量。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">(1).进入/usr/local/mysql/bin,查看此目录下是否有mysql，见pic6。</div><div class="line">(2).执行vim ~/.bash_profile</div><div class="line">    在该文件中添加mysql/bin的目录，见pic7：</div><div class="line">    PATH=$PATH:/usr/local/mysql/bin</div><div class="line">添加完成后，按esc，然后输入wq保存。</div><div class="line">最后在命令行输入source ~/.bash_profile</div></pre></td></tr></table></figure>
<p>现在你就可以通过mysql -u root -p登录mysql了，会让你输入密码，就是提示的默认密码<br>登录成功后，你可以通过下面的命令修改密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">SET PASSWORD FOR &apos;root&apos;@&apos;localhost&apos; = PASSWORD(&apos;newpass&apos;)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;mysql 更改密码&lt;br&gt;此时我们在命令行输入&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td c
    
    </summary>
    
      <category term="mysql" scheme="http://yoursite.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>ios-icon</title>
    <link href="http://yoursite.com/2016/08/05/swift/ios-icon/"/>
    <id>http://yoursite.com/2016/08/05/swift/ios-icon/</id>
    <published>2016-08-05T04:01:07.000Z</published>
    <updated>2016-08-05T04:01:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>根据一个1024的icon，生成所有规格的icon，同时创建好Contents.json文件，支持命令行。<br>主要原因是因为我每次用Phtosohop做完icon都要保存N种规格，烦死了，网上没有发现合适的工具，所以自己写了一个，不过我觉得肯定有这种工具，只不过我没有找到，好吧，算我重复造轮子了。<br>重点是针对Xcode5，旧版本也能用，但没有这么自动化，有用的拿去。</p>
<p><a href="https://github.com/conis/ios-icon" target="_blank" rel="external">ios-icon</a></p>
<p>GitHub: <a href="https://github.com/conis/ios-icon" target="_blank" rel="external">https://github.com/conis/ios-icon</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;根据一个1024的icon，生成所有规格的icon，同时创建好Contents.json文件，支持命令行。&lt;br&gt;主要原因是因为我每次用Phtosohop做完icon都要保存N种规格，烦死了，网上没有发现合适的工具，所以自己写了一个，不过我觉得肯定有这种工具，只不过我没有找
    
    </summary>
    
      <category term="ios" scheme="http://yoursite.com/categories/ios/"/>
    
    
      <category term="ios" scheme="http://yoursite.com/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>第三方库学习</title>
    <link href="http://yoursite.com/2016/07/19/swift/%E7%AC%AC%E4%B8%89%E6%96%B9%E5%BA%93/"/>
    <id>http://yoursite.com/2016/07/19/swift/第三方库/</id>
    <published>2016-07-19T15:42:08.000Z</published>
    <updated>2016-07-19T15:42:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="第三方库"><a href="#第三方库" class="headerlink" title="第三方库"></a>第三方库</h1><p>使用cocoapods</p>
<p>必须用以下格式写Podfile文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">source &apos;https://github.com/CocoaPods/Specs.git&apos;</div><div class="line">platform :ios, &apos;9.0&apos;</div><div class="line">use_frameworks!</div><div class="line"></div><div class="line">target &apos;ProjectName&apos; do</div><div class="line">    pod &apos;ThreeLibName&apos;</div><div class="line">end</div></pre></td></tr></table></figure>
<p>使用swfit必须加上</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">use_frameworks!</div></pre></td></tr></table></figure>
<h2 id="刷新控件"><a href="#刷新控件" class="headerlink" title="刷新控件"></a>刷新控件</h2><h3 id="MJrefresh"><a href="#MJrefresh" class="headerlink" title="MJrefresh"></a>MJrefresh</h3><h2 id="图表控件"><a href="#图表控件" class="headerlink" title="图表控件"></a>图表控件</h2><h3 id="ios-Echarts"><a href="#ios-Echarts" class="headerlink" title="ios-Echarts"></a>ios-Echarts</h3><p>是用oc写的一个基于百度推出的js版本的echarts而写的一个ios版本</p>
<p><a href="https://github.com/Pluto-Y/iOS-Echarts" target="_blank" rel="external">ios-echarts</a></p>
<h5 id="支持以下图表"><a href="#支持以下图表" class="headerlink" title="支持以下图表"></a>支持以下图表</h5><ul>
<li>柱状图</li>
<li>散点图</li>
<li>饼状图</li>
<li>K线图</li>
<li>折线图</li>
</ul>
<p>js版本的<a href="https://github.com/ecomfe/echarts" target="_blank" rel="external">echats</a></p>
<p>还可访问一个百度的js程序员张雯莉。</p>
<p>github地址<a href="http://github.com/Ovilia" target="_blank" rel="external">Ovilia</a></p>
<h3 id="PNchart"><a href="#PNchart" class="headerlink" title="PNchart"></a>PNchart</h3><p>一个oc的图表，比较简单实用，不如<a href="https://github.com/Pluto-Y/iOS-Echarts" target="_blank" rel="external">ios-echarts</a>丰富。</p>
<h3 id="ios-charts"><a href="#ios-charts" class="headerlink" title="ios-charts"></a>ios-charts</h3><p>一个用swift写的图标库。<br><a href="https://github.com/danielgindi/Charts" target="_blank" rel="external">ios-carhts</a><br>还有一个android版本的<br><a href="https://github.com/PhilJay/MPAndroidChart" target="_blank" rel="external">MPAndroidChart</a></p>
<h3 id="特效-special-effects-文本"><a href="#特效-special-effects-文本" class="headerlink" title="特效,special effects,文本"></a>特效,special effects,文本</h3><p>一个UILable的第三方特效控件。<br><a href="https://github.com/lexrus/LTMorphingLabel" target="_blank" rel="external">LTMorphingLabel</a></p>
<h3 id="ios热更新代码-JSPatch-非常好用"><a href="#ios热更新代码-JSPatch-非常好用" class="headerlink" title="ios热更新代码 JSPatch 非常好用"></a>ios热更新代码 JSPatch 非常好用</h3><p><a href="http://www.jspatch.com/" target="_blank" rel="external">JSPatch</a> </p>
<p>gihub地址<a href="https://github.com/bang590/JSPatch" target="_blank" rel="external">JSPatch</a></p>
<h3 id="android-热更新"><a href="#android-热更新" class="headerlink" title="android 热更新"></a>android 热更新</h3><p>百度的热更新<a href="https://github.com/dodola/HotFix" target="_blank" rel="external">HotFix</a></p>
<p>阿里巴巴的热更新<a href="https://github.com/alibaba/AndFix" target="_blank" rel="external">AndFix</a></p>
<p>点评的热更新<a href="https://github.com/jasonross/Nuwa" target="_blank" rel="external">Nuwa</a></p>
<h3 id="引导页"><a href="#引导页" class="headerlink" title="引导页"></a>引导页</h3><p>引导页<a href="https://github.com/StrongX/XSpotLight" target="_blank" rel="external">XSpotLight</a></p>
<p><img src="https://github.com/StrongX/XSportLight/blob/master/10.gif" alt="github"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;第三方库&quot;&gt;&lt;a href=&quot;#第三方库&quot; class=&quot;headerlink&quot; title=&quot;第三方库&quot;&gt;&lt;/a&gt;第三方库&lt;/h1&gt;&lt;p&gt;使用cocoapods&lt;/p&gt;
&lt;p&gt;必须用以下格式写Podfile文件&lt;/p&gt;
&lt;figure class=&quot;highli
    
    </summary>
    
      <category term="ios" scheme="http://yoursite.com/categories/ios/"/>
    
    
      <category term="ios" scheme="http://yoursite.com/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>cherome使用技巧</title>
    <link href="http://yoursite.com/2016/07/19/chrome/Chrome%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2016/07/19/chrome/Chrome使用技巧/</id>
    <published>2016-07-19T15:42:08.000Z</published>
    <updated>2016-08-10T15:12:59.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="cherome-使用技巧"><a href="#cherome-使用技巧" class="headerlink" title="cherome 使用技巧"></a>cherome 使用技巧</h3><p>Infinity(必备)：善心悦目的背景，而且可以自定图标。（鼠标滚轮可以翻页）</p>
<p>AdBlock（必备）：到现在帮我屏蔽了上万条广告</p>
<p>视频广告终结者：在不办任何会员的情况下，基本上所有视频都没广告了，</p>
<p>Google翻译：一键翻译</p>
<p>Tab Sync</p>
<p>有时5点钟流逝的太早。也许你正沦陷于一个很重要的工作项目，或者你正娱乐到一半，但现在是时候出发了。一种解决方案是保存所有打开的标签为书签，打开书签同步，回家后一个一个的打开。或者你可以安装Tab Sync。顾名思义，这个工具同步你所有已打开的标签页。只要按一下按钮，你就可以安心出发。</p>
<p>Tab Menu</p>
<p>这对于经常同时打开超过10个标签的人来说极其方便，并且你打开的标签越多，你就更多的使用这个扩展。轻松的在一个下拉菜单中完成诸如选择、关闭、重新排列、查找等更多功能。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;cherome-使用技巧&quot;&gt;&lt;a href=&quot;#cherome-使用技巧&quot; class=&quot;headerlink&quot; title=&quot;cherome 使用技巧&quot;&gt;&lt;/a&gt;cherome 使用技巧&lt;/h3&gt;&lt;p&gt;Infinity(必备)：善心悦目的背景，而且可以自定图标。
    
    </summary>
    
      <category term="chrome" scheme="http://yoursite.com/categories/chrome/"/>
    
    
      <category term="cherome" scheme="http://yoursite.com/tags/cherome/"/>
    
  </entry>
  
  <entry>
    <title>python Django简介</title>
    <link href="http://yoursite.com/2016/07/14/python/Django%E7%AE%80%E4%BB%8B/"/>
    <id>http://yoursite.com/2016/07/14/python/Django简介/</id>
    <published>2016-07-14T00:00:06.000Z</published>
    <updated>2016-11-02T11:26:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>Django 简介<br>让我们一览 Django 全貌<br>urls.py<br>网址入口，关联到对应的views.py中的一个函数（或者generic类），访问网址就对应一个函数。</p>
<p>views.py<br>处理用户发出的请求，从urls.py中对应过来, 通过渲染templates中的网页可以将显示内容，比如登陆后的用户名，用户请求的数据，输出到网页。</p>
<p>models.py<br>与数据库操作相关，存入或读取数据时用到这个，当然用不到数据库的时候 你可以不使用。</p>
<p>forms.py<br>表单，用户在浏览器上输入数据提交，对数据的验证工作以及输入框的生成等工作，当然你也可以不使用。</p>
<p>templates 文件夹</p>
<p>views.py 中的函数渲染templates中的Html模板，得到动态内容的网页，当然可以用缓存来提高速度。</p>
<p>admin.py<br>后台，可以用很少量的代码就拥有一个强大的后台。</p>
<p>settings.py<br>Django 的设置，配置文件，比如 DEBUG 的开关，静态文件的位置等。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Django 简介&lt;br&gt;让我们一览 Django 全貌&lt;br&gt;urls.py&lt;br&gt;网址入口，关联到对应的views.py中的一个函数（或者generic类），访问网址就对应一个函数。&lt;/p&gt;
&lt;p&gt;views.py&lt;br&gt;处理用户发出的请求，从urls.py中对应过来,
    
    </summary>
    
      <category term="python django" scheme="http://yoursite.com/categories/python-django/"/>
    
    
      <category term="python django" scheme="http://yoursite.com/tags/python-django/"/>
    
  </entry>
  
  <entry>
    <title>计算机书籍</title>
    <link href="http://yoursite.com/2016/07/06/book/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B9%A6%E7%B1%8D%E5%B8%B8%E7%94%A8/"/>
    <id>http://yoursite.com/2016/07/06/book/计算机书籍常用/</id>
    <published>2016-07-06T09:24:11.000Z</published>
    <updated>2016-11-02T11:20:29.000Z</updated>
    
    <content type="html"><![CDATA[<p>1.代码大全</p>
<p>2.程序员修炼之道</p>
<p>3.设计模式</p>
<p>4.重构：改善既有代码的设计</p>
<p>5.哥德尔、艾舍尔、巴赫书：集异璧之大成</p>
<p>6.代码整洁之道</p>
<p>7.修改代码的艺术</p>
<p>8.Unix编程艺术<br>It is useful regardless operating system you use. – J.F. Sebastian<br>不管你使用什么操作系统，这本书都很有用。 – J.F. Sebastian</p>
<p>《代码大全》教你如何正确编程；《人月神话》教你如何正确管理；《设计模式》教你如何正确设计……</p>
<p>9.算法导论</p>
<p>10.人月神话</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.代码大全&lt;/p&gt;
&lt;p&gt;2.程序员修炼之道&lt;/p&gt;
&lt;p&gt;3.设计模式&lt;/p&gt;
&lt;p&gt;4.重构：改善既有代码的设计&lt;/p&gt;
&lt;p&gt;5.哥德尔、艾舍尔、巴赫书：集异璧之大成&lt;/p&gt;
&lt;p&gt;6.代码整洁之道&lt;/p&gt;
&lt;p&gt;7.修改代码的艺术&lt;/p&gt;
&lt;p&gt;8.Unix编程艺
    
    </summary>
    
      <category term="计算机" scheme="http://yoursite.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
    
      <category term="计算机" scheme="http://yoursite.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>hexo更换主题Next</title>
    <link href="http://yoursite.com/2016/07/01/hexo/Hexo%E6%9B%B4%E6%8D%A2%E4%B8%BB%E9%A2%98Next/"/>
    <id>http://yoursite.com/2016/07/01/hexo/Hexo更换主题Next/</id>
    <published>2016-07-01T07:50:08.000Z</published>
    <updated>2016-07-01T07:50:08.000Z</updated>
    
    <content type="html"><![CDATA[<p> 1 下载主题</p>
<p>  从终端进入你的hexo目录然后在终端输入如下命令下载主题</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</div></pre></td></tr></table></figure>
<p> 2 启用主题</p>
<p> 修改当hexo目录下的_config.yml 的theme 选项</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># Extensions</div><div class="line">## Plugins: https://hexo.io/plugins/</div><div class="line">## Themes: https://hexo.io/themes/</div><div class="line">theme: next</div></pre></td></tr></table></figure>
<p> 3 验证是否启用</p>
 <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hexo s --debug</div></pre></td></tr></table></figure>
<p>访问</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://localhost:4000</div></pre></td></tr></table></figure>
<p>确保站点正确运行。</p>
<p>4 其他配置。</p>
<p>   主题设定<br>   <a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="external">next|主题设定</a></p>
<p>   第三方服务<br>   <a href="http://theme-next.iissnan.com/third-party-services.html" target="_blank" rel="external">next|第三方服务</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt; 1 下载主题&lt;/p&gt;
&lt;p&gt;  从终端进入你的hexo目录然后在终端输入如下命令下载主题&lt;/p&gt;
 &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
</feed>
